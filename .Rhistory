abort_preds = read.csv("./final_outputs/abort_preds.csv")
View(abort_preds)
abort_true = read.csv("./final_outputs/abort_true.csv")
View(abort_true)
names(abort_preds) = c("obs_num", "predicted_label")
names(abort_true) = c("obs_num", "true_label")
abort = merge(abort_preds, abort_true, by = "obs_num")
View(abort)
import_topic = function(topic_name){
preds = read.csv(paste0("./final_outputs/", topic_name, "_preds.csv"))
true = read.csv(paste0("./final_outputs/", topic_name, "_true.csv"))
names(preds) = c("obs_num", "predicted_label")
names(true) = c("obs_num", "true_label")
merged = merge(preds, true, by = "obs_num")
}
abort = import_topic(topic_name = "abort")
library(tidyverse)
import_topic = function(topic_name){
preds = read.csv(paste0("./final_outputs/", topic_name, "_preds.csv"))
true = read.csv(paste0("./final_outputs/", topic_name, "_true.csv"))
names(preds) = c("obs_num", "predicted_label")
names(true) = c("obs_num", "true_label")
merged = merge(preds, true, by = "obs_num") %>%
mutate(topic = topic_name)
return(merged)
}
abort = import_topic(topic_name = "abort")
View(abort)
library(tidyverse)
import_topic = function(topic_name){
preds = read.csv(paste0("./final_outputs/", topic_name, "_preds.csv"))
true = read.csv(paste0("./final_outputs/", topic_name, "_true.csv"))
names(preds) = c("obs_num", "predicted_label")
names(true) = c("obs_num", "true_label")
merged = merge(preds, true, by = "obs_num") %>%
mutate(topic = topic_name)
return(merged)
}
aborti = import_topic(topic_name = "abort")
atheism = import_topic(topic_name = "atheism")
clim = import_topic(topic_name = "clim")
hil = import_topic(topic_name = "hil")
fem = import_topic(topic_name = "fem")
all_topics = bind_rows(abort, atheism, clim, hil, fem)
MLmetrics
install.packages("MLmetrics")
library(MLmetrics)
metrics = function(y_true, y_pred){
f1 = F1_Score(y_true = y_true, y_pred = y_pred)
return(f1)
}
metrics(y_true = abort$true_label, y_pred = abort$predicted_label)
metrics = function(y_true, y_pred){
f1 = F1_Score(y_true = y_true, y_pred = y_pred, positive = c(1,2))
return(f1)
}
metrics(y_true = abort$true_label, y_pred = abort$predicted_label)
metrics = function(y_true, y_pred){
f1 = F1_Score(y_true = y_true, y_pred = y_pred, positive = c("1","2"))
return(f1)
}
metrics(y_true = abort$true_label, y_pred = abort$predicted_label)
install.packages("ROCR")
import_topic = function(topic_name){
pred_labels = read.csv(paste0("./final_outputs/", topic_name, "_preds.csv"))
true_labels = read.csv(paste0("./final_outputs/", topic_name, "_true.csv"))
names(pred_labels) = c("obs_num", "predicted_label")
names(true_labels) = c("obs_num", "true_label")
merged = merge(pred_labels, true_labels, by = "obs_num") %>%
mutate(topic = topic_name
, pred_labels = factor(pred_labels)
, true_labels = factor(true_labels))
return(merged)
}
abort = import_topic(topic_name = "abort")
import_topic = function(topic_name){
pred_data = read.csv(paste0("./final_outputs/", topic_name, "_preds.csv"))
true_data = read.csv(paste0("./final_outputs/", topic_name, "_true.csv"))
names(pred_data) = c("obs_num", "predicted_label")
names(true_data) = c("obs_num", "true_label")
merged = merge(pred_data, true_data, by = "obs_num") %>%
mutate(topic = topic_name
, predicted_label = factor(predicted_label)
, true_label = factor(true_label))
return(merged)
}
abort = import_topic(topic_name = "abort")
atheism = import_topic(topic_name = "atheism")
clim = import_topic(topic_name = "clim")
hil = import_topic(topic_name = "hil")
fem = import_topic(topic_name = "fem")
all_topics = bind_rows(abort, atheism, clim, hil, fem)
View(abort)
ggplot(data =  abort %>% group_by(true_label, predicted_label) %>% summarise(n = n())
, mapping = aes(x = true_label, y = predicted_label)) +
geom_tile(aes(fill = n), colour = "white") +
geom_text(aes(label = sprintf("%1.0f", Y)), vjust = 1) +
scale_fill_gradient(low = "white", high = "blue") +
theme_bw() + theme(legend.position = "none")
ggplot(data =  abort %>% group_by(true_label, predicted_label) %>% summarise(n = n())
, mapping = aes(x = true_label, y = predicted_label)) +
geom_tile(aes(fill = n), colour = "white") +
geom_text(aes(label = sprintf("%1.0f", n)), vjust = 1) +
scale_fill_gradient(low = "white", high = "blue") +
theme_bw() + theme(legend.position = "none")
library(tidyverse)
label_levels = c("Against", "Favor", "None")
import_topic = function(topic_name){
pred_data = read.csv(paste0("./final_outputs/", topic_name, "_preds.csv"))
true_data = read.csv(paste0("./final_outputs/", topic_name, "_true.csv"))
names(pred_data) = c("obs_num", "predicted_label")
names(true_data) = c("obs_num", "true_label")
merged = merge(pred_data, true_data, by = "obs_num") %>%
mutate(topic = topic_name
, predicted_label = case_when(predicted_label == 0 ~ "Against"
, predicted_label == 1 ~ "Favor"
, predicted_label == 1 ~ "None"
, TRUE ~ NA_real_) %>% factor(levels = label_levels)
, true_label = case_when(true_label == 0 ~ "Against"
, true_label == 1 ~ "Favor"
, true_label == 1 ~ "None"
, TRUE ~ NA_real_) %>% factor(levels = label_levels)
)
return(merged)
}
abort = import_topic(topic_name = "abort")
label_levels = c("Against", "Favor", "None")
import_topic = function(topic_name){
pred_data = read.csv(paste0("./final_outputs/", topic_name, "_preds.csv"))
true_data = read.csv(paste0("./final_outputs/", topic_name, "_true.csv"))
names(pred_data) = c("obs_num", "predicted_label")
names(true_data) = c("obs_num", "true_label")
merged = merge(pred_data, true_data, by = "obs_num") %>%
mutate(topic = topic_name
, predicted_label_f = case_when(predicted_label == 0 ~ "Against"
, predicted_label == 1 ~ "Favor"
, predicted_label == 1 ~ "None"
, TRUE ~ NA_character_) %>% factor(levels = label_levels)
, true_label_f = case_when(true_label == 0 ~ "Against"
, true_label == 1 ~ "Favor"
, true_label == 1 ~ "None"
, TRUE ~ NA_character_) %>% factor(levels = label_levels)
)
return(merged)
}
abort = import_topic(topic_name = "abort")
atheism = import_topic(topic_name = "atheism")
clim = import_topic(topic_name = "clim")
hil = import_topic(topic_name = "hil")
fem = import_topic(topic_name = "fem")
all_topics = bind_rows(abort, atheism, clim, hil, fem)
# metrics = function(y_true, y_pred){
#   f1 = F1_Score(y_true = y_true, y_pred = y_pred, positive = c("1","2"))
#
#   return(f1)
# }
#
# metrics(y_true = abort$true_label, y_pred = abort$predicted_label)
ggplot(data =  all_topics %>% group_by(true_label_f, predicted_label_f) %>% summarise(n = n())
, mapping = aes(x = true_label_f, y = predicted_label_f)) +
geom_tile(aes(fill = n), colour = "white") +
geom_text(aes(label = sprintf("%1.0f", n)), vjust = 1) +
scale_fill_gradient(low = "white", high = "blue") +
theme_bw() + theme(legend.position = "none")
label_levels = c("Against", "Favor", "None")
import_topic = function(topic_name){
pred_data = read.csv(paste0("./final_outputs/", topic_name, "_preds.csv"))
true_data = read.csv(paste0("./final_outputs/", topic_name, "_true.csv"))
names(pred_data) = c("obs_num", "predicted_label")
names(true_data) = c("obs_num", "true_label")
merged = merge(pred_data, true_data, by = "obs_num") %>%
mutate(topic = topic_name
, predicted_label_f = case_when(predicted_label == 0 ~ "Against"
, predicted_label == 1 ~ "Favor"
, predicted_label == 2 ~ "None"
, TRUE ~ NA_character_) %>% factor(levels = label_levels)
, true_label_f = case_when(true_label == 0 ~ "Against"
, true_label == 1 ~ "Favor"
, true_label == 2 ~ "None"
, TRUE ~ NA_character_) %>% factor(levels = label_levels)
)
return(merged)
}
abort = import_topic(topic_name = "abort")
atheism = import_topic(topic_name = "atheism")
clim = import_topic(topic_name = "clim")
hil = import_topic(topic_name = "hil")
fem = import_topic(topic_name = "fem")
all_topics = bind_rows(abort, atheism, clim, hil, fem)
# metrics = function(y_true, y_pred){
#   f1 = F1_Score(y_true = y_true, y_pred = y_pred, positive = c("1","2"))
#
#   return(f1)
# }
#
# metrics(y_true = abort$true_label, y_pred = abort$predicted_label)
ggplot(data =  all_topics %>% group_by(true_label_f, predicted_label_f) %>% summarise(n = n())
, mapping = aes(x = true_label_f, y = predicted_label_f)) +
geom_tile(aes(fill = n), colour = "white") +
geom_text(aes(label = sprintf("%1.0f", n)), vjust = 1) +
scale_fill_gradient(low = "white", high = "blue") +
theme_bw() + theme(legend.position = "none")
ggplot(data =  all_topics %>% group_by(true_label_f, predicted_label_f) %>% summarise(n = n())
, mapping = aes(x = true_label_f, y = predicted_label_f)) +
geom_tile(aes(fill = n), colour = "white") +
geom_text(aes(label = sprintf("%1.0f", n)), vjust = 1) +
scale_fill_gradient(low = "white", high = "blue") +
theme_bw() + theme(legend.position = "none") +
labs(x = "True Label", y = "Predicted Label")
ggplot(data =  all_topics %>% group_by(true_label_f, predicted_label_f) %>% summarise(n = n())
, mapping = aes(x = true_label_f, y = predicted_label_f)) +
geom_tile(aes(fill = n), colour = "white") +
geom_text(aes(label = sprintf("%1.0f", n)), vjust = 1) +
scale_fill_gradient(low = "white", high = "light blue") +
theme_bw() + theme(legend.position = "none") +
labs(x = "True Label", y = "Predicted Label")
ggplot(data =  all_topics %>% group_by(true_label_f, predicted_label_f) %>% summarise(n = n())
, mapping = aes(x = true_label_f, y = predicted_label_f)) +
geom_tile(aes(fill = n), colour = "white") +
geom_text(aes(label = sprintf("%1.0f", n)), vjust = 1) +
scale_fill_gradient(low = "white", high = "green") +
theme_bw() + theme(legend.position = "none") +
labs(x = "True Label", y = "Predicted Label")
